jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  clouds:
  - kubernetes:
      containerCap: 10
      containerCapStr: "10"
      jenkinsTunnel: "jenkins-jnlp.jenkins.svc:50000"
      jenkinsUrl: "http://jenkins.jenkins.svc:8080"
      name: "kubernetes"
      namespace: "jenkins"
      serverUrl: "https://kubernetes.default.svc.cluster.local"
  authorizationStrategy: unsecured
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  labelAtoms:
  - name: "built-in"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  numExecutors: 2
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  slaveAgentPort: 50000
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  gitHooks:
    allowedOnAgents: false
    allowedOnController: false
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "knownHostsFileVerificationStrategy"
  sSHD:
    port: -1
unclassified:
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  buildStepOperation:
    enabled: false
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  gitHubConfiguration:
    apiRateLimitChecker: ThrottleForNormalize
  gitHubPluginConfig:
    hookUrl: "http://192.168.49.2:30000/github-webhook/"
  globalTimeOutConfiguration:
    operations:
    - "abortOperation"
    overwriteable: false
  junitTestResultStorage:
    storage: "file"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
    url: "http://192.168.49.2:30000/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
  scmGit:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  timestamper:
    allPipelines: false
    elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
    systemTimeFormat: "'<b>'HH:mm:ss'</b> '"
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
jobs:
  - file: /usr/share/jenkins/ref/simplejob.groovy
  - file: /usr/share/jenkins/ref/dockerjob.groovy
  - script: >
      pipelineJob('Application_Dev') {
        displayName('Application_Dev')
        definition {
          cpsScm {
            scm {
              git {
                remote {
                  url('https://github.com/stevshil/sretrainingenv.git')
                }
                branch('*/main')
              }
            }
            scriptPath("CDDBAPI/Jenkinsfile")
            lightweight()
          }
        }
      }
  - script: >
      pipelineJob('Delete_Rouge_Containers') {
        displayName('Delete_Rouge_Containers')
        definition {
          cps {
            script("""
              pipeline {
                agent {
                  kubernetes {
                    yaml '''
                      apiVersion: v1
                      kind: Pod
                      spec:
                        containers:
                        - name: docker
                          image: docker:latest
                          command:
                          - cat
                          tty: true
                          volumeMounts:
                          - mountPath: /var/run/docker.sock
                            name: docker-sock
                        volumes:
                        - name: docker-sock
                          hostPath:
                            path: /var/run/docker.sock
                    '''
                  }
                }
                stages {
                  stage('Delete Containers') {
                    steps {
                      container('docker') {
                        sh '''
                          for container in `docker ps -a | grep 'dev.*-v' | awk '{print \$NF}'`
                          do
                            docker rm -f \${container}
                          done
                          for image in `docker images | grep 'dev.*:v' | awk '{print \$3}'`
                          do
                            docker rmi \${image}
                          done
                        '''
                      }
                    }
                  }
                }
              }
            """)
            sandbox()
          }
        }
      }